{"ast":null,"code":"import { API_URL, pegarAuthToken, setAuthToken } from './Token/Token.js';\nconst authToken = pegarAuthToken();\nexport const login = async (email, password, name) => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      name\n    })\n  });\n  if (response.status === 400) {\n    throw new Error('Senha incorreta ou usuário não cadastrado!');\n  }\n  const data = await response.json();\n  const authToken = data.accessToken;\n  const user = data.user;\n  setAuthToken(authToken, user);\n  return data;\n};\nexport const criarUsuario = async (nome, email, password, role) => {\n  const response = await fetch(`${API_URL}/users`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: nome,\n      email: email,\n      password: password,\n      role: role\n    })\n  });\n  if (!response.ok) {\n    if (response.status === 401) {\n      throw new Error('O token expirou, faça login novamente!');\n    }\n    throw new Error('Erro ao criar o usuário');\n  }\n};\nexport const listarUsuarios = async () => {\n  try {\n    //const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n    const response = await fetch(`${API_URL}/users`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      }\n    });\n    if (!response.ok) {\n      if (response.status === 401) {\n        throw new Error('O token expirou, faça login novamente!');\n      }\n      throw new Error('Erro ao obter usuários');\n    }\n    return response.json();\n  } catch (error) {\n    throw new Error('Erro ao obter usuários');\n  }\n};\nexport const deletarUsuario = async id => {\n  try {\n    //const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n    const response = await fetch(`${API_URL}/users/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      }\n    });\n    if (!response.ok) {\n      if (response.status === 401) {\n        throw new Error('O token expirou, faça login novamente!');\n      }\n      throw new Error('Erro ao deletar usuário');\n    }\n  } catch (error) {\n    throw new Error('Erro ao deletar usuário');\n  }\n};\nexport const editarUsuario = async (uid, novoUsuario) => {\n  try {\n    //const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n    const response = await fetch(`${API_URL}/users/${uid}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify(novoUsuario)\n    });\n    if (!response.ok) {\n      if (response.status === 401) {\n        throw new Error('O token expirou, faça login novamente!');\n      }\n      throw new Error('Erro ao editar o usuário');\n    }\n    const respostaApi = await response.json();\n    return respostaApi;\n  } catch (error) {\n    throw new Error('Erro ao editar o usuário');\n  }\n};\nconst obterNomeUsuario = () => {\n  const authToken = localStorage.getItem('authToken');\n  const userData = localStorage.getItem('user');\n  const user = userData ? JSON.parse(userData) : null;\n  if (authToken && user && user.name) {\n    return user.name;\n  }\n  return null;\n};\nexport default obterNomeUsuario;","map":{"version":3,"names":["API_URL","pegarAuthToken","setAuthToken","authToken","login","email","password","name","response","fetch","method","headers","body","JSON","stringify","status","Error","data","json","accessToken","user","criarUsuario","nome","role","ok","listarUsuarios","error","deletarUsuario","id","editarUsuario","uid","novoUsuario","respostaApi","obterNomeUsuario","localStorage","getItem","userData","parse"],"sources":["/Users/user/Desktop/burguer-script/burger-script/src/API/Usuarios.js"],"sourcesContent":["import {\n  API_URL,\n  pegarAuthToken,\n  setAuthToken,\n}\n  from './Token/Token.js'\n\nconst authToken = pegarAuthToken();\n\nexport const login = async (email, password, name) => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password, name })\n  });\n  if (response.status === 400) {\n    throw new Error('Senha incorreta ou usuário não cadastrado!');\n  }\n\n\n  const data = await response.json();\n  const authToken = data.accessToken;\n  const user = data.user;\n\n  setAuthToken(authToken, user);\n\n  return data;\n};\n\n\nexport const criarUsuario = async (nome, email, password, role) => {\n  const response = await fetch(`${API_URL}/users`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name: nome,\n      email: email,\n      password: password,\n      role: role\n    })\n  });\n\n  if (!response.ok) {\n    if (response.status === 401) {\n      throw new Error('O token expirou, faça login novamente!');\n    }\n    throw new Error('Erro ao criar o usuário');\n  }\n\n\n}\n\nexport const listarUsuarios = async () => {\n  try {\n    //const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n\n    const response = await fetch(`${API_URL}/users`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n    });\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        throw new Error('O token expirou, faça login novamente!');\n      }\n      throw new Error('Erro ao obter usuários');\n    }\n\n    return response.json();\n  } catch (error) {\n    throw new Error('Erro ao obter usuários');\n  }\n};\n\nexport const deletarUsuario = async (id) => {\n  try {\n    //const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n\n    const response = await fetch(`${API_URL}/users/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      }\n    });\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        throw new Error('O token expirou, faça login novamente!');\n      }\n      throw new Error('Erro ao deletar usuário');\n    }\n  } catch (error) {\n    throw new Error('Erro ao deletar usuário');\n  }\n};\n\nexport const editarUsuario = async (uid, novoUsuario) => {\n  try {\n    //const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n\n    const response = await fetch(`${API_URL}/users/${uid}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify(novoUsuario)\n    });\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        throw new Error('O token expirou, faça login novamente!');\n      }\n      throw new Error('Erro ao editar o usuário');\n    }\n    const respostaApi = await response.json();\n    return respostaApi;\n  } catch (error) {\n    throw new Error('Erro ao editar o usuário');\n  }\n};\n\n\nconst obterNomeUsuario = () => {\n  const authToken = localStorage.getItem('authToken');\n  const userData = localStorage.getItem('user');\n  const user = userData ? JSON.parse(userData) : null;\n\n  if (authToken && user && user.name) {\n    return user.name; \n  }\n  return null;\n};\nexport default obterNomeUsuario;"],"mappings":"AAAA,SACEA,OAAO,EACPC,cAAc,EACdC,YAAY,QAEP,kBAAkB;AAEzB,MAAMC,SAAS,GAAGF,cAAc,CAAC,CAAC;AAElC,OAAO,MAAMG,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,KAAK;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,QAAO,EAAE;IAC/CU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,KAAK;MAAEC,QAAQ;MAAEC;IAAK,CAAC;EAChD,CAAC,CAAC;EACF,IAAIC,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EAGA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;EAClC,MAAMf,SAAS,GAAGc,IAAI,CAACE,WAAW;EAClC,MAAMC,IAAI,GAAGH,IAAI,CAACG,IAAI;EAEtBlB,YAAY,CAACC,SAAS,EAAEiB,IAAI,CAAC;EAE7B,OAAOH,IAAI;AACb,CAAC;AAGD,OAAO,MAAMI,YAAY,GAAG,MAAAA,CAAOC,IAAI,EAAEjB,KAAK,EAAEC,QAAQ,EAAEiB,IAAI,KAAK;EACjE,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,QAAO,EAAE;IAC/CU,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBP,IAAI,EAAEe,IAAI;MACVjB,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA,QAAQ;MAClBiB,IAAI,EAAEA;IACR,CAAC;EACH,CAAC,CAAC;EAEF,IAAI,CAACf,QAAQ,CAACgB,EAAE,EAAE;IAChB,IAAIhB,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;MAC3B,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IACA,MAAM,IAAIA,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AAGF,CAAC;AAED,OAAO,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF;;IAEA,IAAI,CAACtB,SAAS,EAAE;MACd,MAAM,IAAIa,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,QAAO,EAAE;MAC/CU,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASR,SAAU;MACvC;IACF,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACgB,EAAE,EAAE;MAChB,IAAIhB,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;MAC3D;MACA,MAAM,IAAIA,KAAK,CAAC,wBAAwB,CAAC;IAC3C;IAEA,OAAOR,QAAQ,CAACU,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACd,MAAM,IAAIV,KAAK,CAAC,wBAAwB,CAAC;EAC3C;AACF,CAAC;AAED,OAAO,MAAMW,cAAc,GAAG,MAAOC,EAAE,IAAK;EAC1C,IAAI;IACF;;IAEA,IAAI,CAACzB,SAAS,EAAE;MACd,MAAM,IAAIa,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,UAAS4B,EAAG,EAAC,EAAE;MACrDlB,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASR,SAAU;MACvC;IACF,CAAC,CAAC;IAEF,IAAI,CAACK,QAAQ,CAACgB,EAAE,EAAE;MAChB,IAAIhB,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;MAC3D;MACA,MAAM,IAAIA,KAAK,CAAC,yBAAyB,CAAC;IAC5C;EACF,CAAC,CAAC,OAAOU,KAAK,EAAE;IACd,MAAM,IAAIV,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AACF,CAAC;AAED,OAAO,MAAMa,aAAa,GAAG,MAAAA,CAAOC,GAAG,EAAEC,WAAW,KAAK;EACvD,IAAI;IACF;;IAEA,IAAI,CAAC5B,SAAS,EAAE;MACd,MAAM,IAAIa,KAAK,CAAC,yBAAyB,CAAC;IAC5C;IAEA,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAET,OAAQ,UAAS8B,GAAI,EAAC,EAAE;MACtDpB,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASR,SAAU;MACvC,CAAC;MACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACiB,WAAW;IAClC,CAAC,CAAC;IAEF,IAAI,CAACvB,QAAQ,CAACgB,EAAE,EAAE;MAChB,IAAIhB,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC3B,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;MAC3D;MACA,MAAM,IAAIA,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IACA,MAAMgB,WAAW,GAAG,MAAMxB,QAAQ,CAACU,IAAI,CAAC,CAAC;IACzC,OAAOc,WAAW;EACpB,CAAC,CAAC,OAAON,KAAK,EAAE;IACd,MAAM,IAAIV,KAAK,CAAC,0BAA0B,CAAC;EAC7C;AACF,CAAC;AAGD,MAAMiB,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAM9B,SAAS,GAAG+B,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EACnD,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;EAC7C,MAAMf,IAAI,GAAGgB,QAAQ,GAAGvB,IAAI,CAACwB,KAAK,CAACD,QAAQ,CAAC,GAAG,IAAI;EAEnD,IAAIjC,SAAS,IAAIiB,IAAI,IAAIA,IAAI,CAACb,IAAI,EAAE;IAClC,OAAOa,IAAI,CAACb,IAAI;EAClB;EACA,OAAO,IAAI;AACb,CAAC;AACD,eAAe0B,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}