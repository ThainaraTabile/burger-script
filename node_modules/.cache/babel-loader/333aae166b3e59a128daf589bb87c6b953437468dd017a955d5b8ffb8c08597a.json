{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/burger-script-thai/burger-script/src/Paginas/FazerPedido/FazerPedido.js\",\n  _s = $RefreshSig$();\nimport Cardapio from '../../componentes/Cardapio/Cardapio';\nimport ResumoPedido from '../../componentes/ResumoPedido/ResumoPedido';\nimport { useState } from 'react';\nimport './FazerPedido.css';\nimport { Link } from 'react-router-dom';\nimport MenuNavegacao from '../../componentes/MenuNavegacao/MenuNavegacao';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FazerPedido = () => {\n  _s();\n  const [produtosSelecionados, setProdutosSelecionados] = useState([]);\n  const manipularProdutoSelecionado = (produto, operacao) => {\n    const produtoSelecionado = produtosSelecionados.find(produtoSelecionado => produtoSelecionado.id === produto.id);\n    console.log(operacao);\n    if (operacao === 'incrementar') {\n      if (produtoSelecionado) {\n        produtoSelecionado.quantity++;\n        produtoSelecionado.total = produtoSelecionado.quantity * produtoSelecionado.price;\n      } else {\n        produto.total = produto.quantity * produto.price;\n        produtosSelecionados.push(produto);\n      }\n    } else if (operacao === 'decrementar') {\n      if (produtoSelecionado) {\n        if (produtoSelecionado.quantity > 1) {\n          produtoSelecionado.quantity--;\n          produtoSelecionado.total = produtoSelecionado.quantity * produtoSelecionado.price;\n        } else {\n          const indexProdutoSelecionado = produtosSelecionados.indexOf(produtoSelecionado);\n          console.log(indexProdutoSelecionado);\n          produtosSelecionados.splice(indexProdutoSelecionado, 1);\n          console.log(produtosSelecionados);\n        }\n      }\n    }\n    setProdutosSelecionados([...produtosSelecionados]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"telaFazerPedido\",\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"botaoSair\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/atendimento\",\n        className: \"botaoSair\",\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MenuNavegacao, {\n      to: \"/fazerpedido\",\n      texto: \"registrar pedido\",\n      imagemSrc: \"fazer-pedido.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cardapio, {\n      manipularProdutoSelecionado: manipularProdutoSelecionado\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResumoPedido, {\n      produtosSelecionados: produtosSelecionados\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(FazerPedido, \"foFHrzbiJVxZBJzjSQhJH6VOPB4=\");\n_c = FazerPedido;\nexport default FazerPedido;\nvar _c;\n$RefreshReg$(_c, \"FazerPedido\");","map":{"version":3,"names":["Cardapio","ResumoPedido","useState","Link","MenuNavegacao","jsxDEV","_jsxDEV","FazerPedido","_s","produtosSelecionados","setProdutosSelecionados","manipularProdutoSelecionado","produto","operacao","produtoSelecionado","find","id","console","log","quantity","total","price","push","indexProdutoSelecionado","indexOf","splice","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","texto","imagemSrc","_c","$RefreshReg$"],"sources":["/Users/user/Desktop/burger-script-thai/burger-script/src/Paginas/FazerPedido/FazerPedido.js"],"sourcesContent":["import Cardapio from '../../componentes/Cardapio/Cardapio'\nimport ResumoPedido from '../../componentes/ResumoPedido/ResumoPedido'\nimport { useState } from 'react'\nimport './FazerPedido.css'\nimport { Link } from 'react-router-dom'\nimport MenuNavegacao from '../../componentes/MenuNavegacao/MenuNavegacao'\n\nconst FazerPedido = () => {\n  const [produtosSelecionados, setProdutosSelecionados] = useState([]);\n\n  const manipularProdutoSelecionado = (produto, operacao) => {\n    const produtoSelecionado = produtosSelecionados.find(produtoSelecionado => produtoSelecionado.id === produto.id);\n    console.log(operacao)\n\n    if (operacao === 'incrementar') {\n      if (produtoSelecionado) {\n        produtoSelecionado.quantity++;\n        produtoSelecionado.total = produtoSelecionado.quantity * produtoSelecionado.price;\n      } else {\n        produto.total = produto.quantity * produto.price;\n        produtosSelecionados.push(produto)\n      }\n    } else if (operacao === 'decrementar') {\n      if (produtoSelecionado) {\n        if (produtoSelecionado.quantity > 1) {\n          produtoSelecionado.quantity--;\n          produtoSelecionado.total = produtoSelecionado.quantity * produtoSelecionado.price;\n        } else {\n          const indexProdutoSelecionado = produtosSelecionados.indexOf(produtoSelecionado)\n          console.log(indexProdutoSelecionado);\n          produtosSelecionados.splice(indexProdutoSelecionado, 1);\n          console.log(produtosSelecionados)\n        }\n      }\n    }\n\n\n    setProdutosSelecionados([...produtosSelecionados]);\n  };\n\n  return (\n    <section className='telaFazerPedido'>\n      <nav className='botaoSair'>\n        <Link to='/atendimento' className='botaoSair'>Voltar</Link>\n      </nav>\n      <MenuNavegacao\n        to='/fazerpedido'\n        texto='registrar pedido'\n        imagemSrc='fazer-pedido.png'\n      />\n      <Cardapio manipularProdutoSelecionado={manipularProdutoSelecionado} />\n      <ResumoPedido produtosSelecionados={produtosSelecionados} />\n\n    </section>\n  );\n};\n\nexport default FazerPedido;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}