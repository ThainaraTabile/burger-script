{"ast":null,"code":"const API_URL = 'https://burger-queen-api-mock-mluz.vercel.app';\nconst pegarAuthToken = () => {\n  const token = localStorage.getItem('authToken');\n  return token;\n};\nconst setAuthToken = (token, user) => {\n  if (token && user) {\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n};\nexport const login = async (email, password, name) => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      name\n    })\n  });\n  if (response.status === 400) {\n    throw new Error('Senha incorreta ou usuário não cadastrado!');\n  }\n  const data = await response.json();\n  const authToken = data.accessToken;\n  const user = data.user;\n  setAuthToken(authToken, user);\n  return data;\n};\nexport const criarUsuario = async (nome, email, password, role) => {\n  const response = await fetch(`${API_URL}/users`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name: nome,\n      email: email,\n      password: password,\n      role: role\n    })\n  });\n  if (!response.ok) {\n    if (response.status === 401) {\n      throw new Error('O token expirou, faça login novamente!');\n    }\n    throw new Error('Erro ao criar o usuário');\n  }\n};\nexport const listarUsuarios = async () => {\n  try {\n    const authToken = pegarAuthToken();\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n    const response = await fetch(`${API_URL}/users`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao obter usuários');\n    }\n    return response.json();\n  } catch (error) {\n    throw new Error('Erro ao obter usuários');\n  }\n};\nexport const deletarUsuario = async id => {\n  try {\n    const authToken = pegarAuthToken();\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n    const response = await fetch(`${API_URL}/users/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao deletar usuário');\n    }\n  } catch (error) {\n    throw new Error('Erro ao deletar usuário');\n  }\n};\nexport const editarUsuario = async (uid, novoUsuario) => {\n  try {\n    const authToken = pegarAuthToken();\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n    const response = await fetch(`${API_URL}/users/${uid}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify(novoUsuario)\n    });\n    if (!response.ok) {\n      throw new Error('Erro ao editar o usuário');\n    }\n    const respostaApi = await response.json();\n    return respostaApi;\n  } catch (error) {\n    throw new Error('Erro ao editar o usuário');\n  }\n};\nconst obterNomeUsuario = () => {\n  const authToken = localStorage.getItem('authToken');\n  const userData = localStorage.getItem('user');\n  const user = userData ? JSON.parse(userData) : null;\n  if (authToken && user && user.name) {\n    return user.name; // Retorna o nome do usuário\n  }\n\n  return null;\n};\nexport default obterNomeUsuario;","map":{"version":3,"names":["API_URL","pegarAuthToken","token","localStorage","getItem","setAuthToken","user","setItem","JSON","stringify","login","email","password","name","response","fetch","method","headers","body","status","Error","data","json","authToken","accessToken","criarUsuario","nome","role","ok","listarUsuarios","error","deletarUsuario","id","editarUsuario","uid","novoUsuario","respostaApi","obterNomeUsuario","userData","parse"],"sources":["/Users/user/Desktop/burger-script-thai/burger-script/src/API/Usuarios.js"],"sourcesContent":["const API_URL = 'https://burger-queen-api-mock-mluz.vercel.app';\n\nconst pegarAuthToken = () => {\n  const token = localStorage.getItem('authToken');\n  return token;\n};\n\nconst setAuthToken = (token, user) => {\n  if (token && user) {\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n};\n\nexport const login = async (email, password, name) => {\n  const response = await fetch(`${API_URL}/login`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ email, password, name })\n  });\n  if (response.status === 400) {\n    throw new Error('Senha incorreta ou usuário não cadastrado!');\n  }\n\n\n  const data = await response.json();\n  const authToken = data.accessToken;\n  const user = data.user;\n\n  setAuthToken(authToken, user);\n\n  return data;\n};\n\n\nexport const criarUsuario = async (nome, email, password, role) => {\n  const response = await fetch(`${API_URL}/users`, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      name: nome,\n      email: email,\n      password: password,\n      role: role\n    })\n  });\n\n  if (!response.ok) {\n    if (response.status === 401) {\n      throw new Error('O token expirou, faça login novamente!');\n    }\n    throw new Error('Erro ao criar o usuário');\n  }\n\n\n}\n\nexport const listarUsuarios = async () => {\n  try {\n    const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n\n    const response = await fetch(`${API_URL}/users`, {\n      method: \"GET\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error('Erro ao obter usuários');\n    }\n\n    return response.json();\n  } catch (error) {\n    throw new Error('Erro ao obter usuários');\n  }\n};\n\nexport const deletarUsuario = async (id) => {\n  try {\n    const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n\n    const response = await fetch(`${API_URL}/users/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error('Erro ao deletar usuário');\n    }\n  } catch (error) {\n    throw new Error('Erro ao deletar usuário');\n  }\n};\n\nexport const editarUsuario = async (uid, novoUsuario) => {\n  try {\n    const authToken = pegarAuthToken();\n\n    if (!authToken) {\n      throw new Error('Usuário não autenticado');\n    }\n\n    const response = await fetch(`${API_URL}/users/${uid}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${authToken}`\n      },\n      body: JSON.stringify(novoUsuario)\n    });\n\n    if (!response.ok) {\n      throw new Error('Erro ao editar o usuário');\n    }\n    const respostaApi = await response.json();\n    return respostaApi;\n  } catch (error) {\n    throw new Error('Erro ao editar o usuário');\n  }\n};\n\n\nconst obterNomeUsuario = () => {\n  const authToken = localStorage.getItem('authToken');\n  const userData = localStorage.getItem('user');\n  const user = userData ? JSON.parse(userData) : null;\n\n  if (authToken && user && user.name) {\n    return user.name; // Retorna o nome do usuário\n  }\n\n  return null;\n};\nexport default obterNomeUsuario;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}