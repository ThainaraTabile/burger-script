{"ast":null,"code":"export const API_URL = 'https://burger-queen-api-mock-mluz.vercel.app';\nexport const getAuthToken = () => {\n  const token = localStorage.getItem('authToken');\n  return token;\n};\nexport const pegarAuthToken = () => {\n  const token = localStorage.getItem('authToken');\n  return token;\n};\nexport const setAuthToken = (token, user) => {\n  if (token && user) {\n    localStorage.setItem('authToken', token);\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n};","map":{"version":3,"names":["API_URL","getAuthToken","token","localStorage","getItem","pegarAuthToken","setAuthToken","user","setItem","JSON","stringify"],"sources":["/Users/user/Desktop/burguer-script/burger-script/src/API/Token/Token.js"],"sourcesContent":["export const API_URL = 'https://burger-queen-api-mock-mluz.vercel.app';\n\nexport const getAuthToken = () => {\n  const token = localStorage.getItem('authToken');\n  return token;\n};\n\nexport const pegarAuthToken = () => {\n    const token = localStorage.getItem('authToken');\n    return token;\n  };\n  \n  export const setAuthToken = (token, user) => {\n    if (token && user) {\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n  };"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAG,+CAA+C;AAEtE,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAChC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,OAAOF,KAAK;AACd,CAAC;AAED,OAAO,MAAMG,cAAc,GAAGA,CAAA,KAAM;EAChC,MAAMH,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;EAC/C,OAAOF,KAAK;AACd,CAAC;AAED,OAAO,MAAMI,YAAY,GAAGA,CAACJ,KAAK,EAAEK,IAAI,KAAK;EAC3C,IAAIL,KAAK,IAAIK,IAAI,EAAE;IACjBJ,YAAY,CAACK,OAAO,CAAC,WAAW,EAAEN,KAAK,CAAC;IACxCC,YAAY,CAACK,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAAC;EACpD;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}